version: '3.8'

# networks
# create a network 'data_network' in mode 'bridged'
networks:
  data_network:
    driver: bridge

# services:
# create a service 'guacd' from image 'guacamole/guacd'
services:
  guacd:
    container_name: guacd
    image: guacamole/guacd
    networks:
      data_network:
    ports:
      - 4822:4822
    restart: always
    volumes:
    - ./drive:/drive:rw
    - ./record:/record:rw

# database postgres
# create a service 'postgres' from image 'postgres:15.2-alpine'

  postgres:
    container_name: postgres
    image: postgres
    networks:
      data_network:
    restart: always
    environment:
      - POSTGRES_USER=guacamole_user
      - POSTGRES_PASSWORD=admin0088
      - POSTGRES_DB=datawork_db
    volumes:
     - ./init:/docker-entrypoint-initdb.d:z
     - ./data:/var/lib/postgresql/data:Z

  guacamole:
    container_name: guacamole
    image: guacamole/guacamole
    networks:
      data_network:
    restart: always
    ports:
      - 8080:8080 
    links:
      - guacd
    environment:
      - GUACD_HOSTNAME=guacd
      - POSTGRES_DATABASE=datawork_db
      - POSTGRES_HOSTNAME=postgres
      - POSTGRES_USER=guacamole_user
      - POSTGRES_PASSWORD=admin0088
    depends_on:
      - guacd
      - postgres

## User: guacadmin 
## password: guacadmin

## enable next line if not using nginx
##    - 8080:8080/tcp # Guacamole is on :8080/guacamole, not /.
## enable next line when using nginx

########### optional ##############
  # nginx
  nginx:
   container_name: nginx_guacamole
   restart: always
   image: nginx
   volumes:
   - ./nginx/templates:/etc/nginx/templates:ro
   - ./nginx/ssl/self.cert:/etc/nginx/ssl/self.cert:ro
   - ./nginx/ssl/self-ssl.key:/etc/nginx/ssl/self-ssl.key:ro
   ports:
   - 443:443
   - 80:80
   links:
   - guacamole
   networks:
     data_network:

  debianVNC:
    container_name: debianVNC
    image: dataworks-testing
    networks:
      data_network:
    environment:
      - VNC_RESOLUTION=1280x1024
      - VNC_COL_DEPTH=24
      - VNC_PW=dataworks
      - USER=root
    command: ["/bin/bash", "-c", "/usr/bin/vncserver && tail -f /dev/null"]
    ports:
      - 5901:5901
    restart: always
    volumes:
      - ./drive:/drive:rw
      - ./record:/record:rw


  